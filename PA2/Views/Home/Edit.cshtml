@model PA2.Models.Orders

@{
    ViewBag.Title = "Edit order";
    var list = new List<string>
    {
        "Processing",
        "Accepted",
        "Completed"
    };
}

@if (ViewBag.msg != null)
{
    <div class="alert alert-danger" style="margin-top: 2rem">
        @ViewBag.msg
    </div>
}

@if (ViewBag.successMsg != null)
{
    <div class="alert alert-success" style="margin-top: 2rem">
        @ViewBag.successMsg
    </div>
}

<h2>Edit Order</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Orders</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OrderID)
        @Html.HiddenFor(model => model.CustomerID)

        <div class="form-group">
            @Html.LabelFor(model => model.OrderDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderDescription, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Order description" } })
                @Html.ValidationMessageFor(model => model.OrderDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderEmail, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "E-mail", @type = "email"} })
                @Html.ValidationMessageFor(model => model.OrderEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Session["CustomerAdmin"] as string == "1")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.OrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => Model.OrderStatus, new SelectList(list), htmlAttributes: new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(model => model.OrderStatus, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.OrderStatus)
        }

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryAddress, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.DeliveryAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @required = "required", @placeholder = "Delivery Date" } })
                @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryTime, new { htmlAttributes = new { @class = "form-control", @type = "time", @required = "required", @placeholder = "Delivery Time" } })
                @Html.ValidationMessageFor(model => model.DeliveryTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryContact, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryContact, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Contact number", @Type = "number" } })
                @Html.ValidationMessageFor(model => model.DeliveryContact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Orders", "Orders")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
